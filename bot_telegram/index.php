<?php
//Connect Bot Telegram
$token = "5809297001:AAHejPXV8hfdZFkWoNCW03HDzTWsasdo3oY";
$api_url = "https://api.telegram.org/bot" . $token;
$update = json_decode(file_get_contents("php://input"), TRUE);
$message = $update["message"];
$text = $message["text"];
$chat_id = $message["chat"]["id"];
// $firstName = $update['message']['chat']['first_name'];
// $lastName = $update['message']['chat']['last_name'];
$firstName = $update['message']['from']['first_name'];
$lastName = $update['message']['from']['last_name'];
$name_user = $firstName . " " . $lastName;

$data = file_get_contents('php://input');
$json = json_decode($data, true);

$data = file_get_contents('php://input');
require_once "TelegramBot.php";
//Connect Database
$servername = gethostname();
$username = "kbhnftgroupvncom";
$password = "ghfjt!#gfjg1fdjk";
$dbname = "kbhnftgroupvncom";
date_default_timezone_set("Asia/Ho_Chi_Minh");

$callback_query = $update["callback_query"];
$data = $callback_query["data"];
$callback_id = $callback_query["id"];

// X·ª≠ l√Ω tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng
if ($text == "/xemkqxs") {
    $keyboard = [
        'inline_keyboard' => [
            [
                ['text' => 'Mi·ªÅn B·∫Øc', 'callback_data' => 'kqmb'],
                ['text' => 'Mi·ªÅn Trung', 'callback_data' => 'kqmt'],
                ['text' => 'Mi·ªÅn Nam', 'callback_data' => 'kqmn']
            ]
        ]
    ];

    $reply_markup = json_encode($keyboard);

    $response = [
        'method' => 'sendMessage',
        'chat_id' => $chat_id,
        'text' => 'Xin ch√†o! H√£y ch·ªçn mi·ªÅn mu·ªën xem:',
        'reply_markup' => $reply_markup
    ];

    // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
    file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
}

if ($text == "/wm") {
    $keyboard = [
        'inline_keyboard' => [
            [
                ['text' => 'Thu·∫≠t ng·ªØ h√¥ casino', 'callback_data' => 'tnhcsn'],
            ],
            [
                ['text' => 'T√†i x·ªâu WM', 'callback_data' => 'txwm'],
                ['text' => 'X√≥c dƒ©a WM', 'callback_data' => 'xdwm'],
            ],
            [
                ['text' => 'Baccarat WM', 'callback_data' => 'bcrwm'],
                ['text' => 'R·ªìng h·ªï WM', 'callback_data' => 'rhwm'],
            ]
        ]
    ];

    $reply_markup = json_encode($keyboard);

    $response = [
        'method' => 'sendMessage',
        'chat_id' => $chat_id,
        'text' => "OK ! $name_user ƒëang mu·ªën em h∆∞·ªõng d·∫´n ch∆°i ·ªü s√†n WM . $name_user vui l√≤ng ch·ªçn ti·∫øp c√°c m·ª•c b√™n d∆∞·ªõi ƒë·ªÉ em h∆∞·ªõng d·∫´n chi ti·∫øt h∆°n nh√©! üòç",
        'reply_markup' => $reply_markup
    ];
    // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
    file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
}

if ($text == "/dg") {
    $keyboard = [
        'inline_keyboard' => [
            [
                ['text' => 'Thu·∫≠t ng·ªØ h√¥ casino', 'callback_data' => 'tnhcsn'],
                ['text' => 'Baccarat DG', 'callback_data' => 'bcrdg'],
            ],
            [
                ['text' => 'Ch·∫µn l·∫ª DG', 'callback_data' => 'cldg'],
                ['text' => 'Sicbo DG', 'callback_data' => 'sbdg'],
            ]
        ]
    ];
    $reply_markup = json_encode($keyboard);

    $response = [
        'method' => 'sendMessage',
        'chat_id' => $chat_id,
        'text' => "OK ! $name_user ƒëang mu·ªën em h∆∞·ªõng d·∫´n ch∆°i ·ªü s√†n DG . $name_user vui l√≤ng ch·ªçn ti·∫øp c√°c m·ª•c b√™n d∆∞·ªõi ƒë·ªÉ em h∆∞·ªõng d·∫´n chi ti·∫øt h∆°n nh√© üòç",
        'reply_markup' => $reply_markup
    ];

    // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
    file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
}

if ($text == "/naprut") {
    $keyboard = [
        'inline_keyboard' => [
            [
                ['text' => 'H∆∞·ªõng d·∫´n n·∫°p ti·ªÅn', 'callback_data' => 'hdnt'],
                ['text' => 'H∆∞·ªõng d·∫´n r√∫t ti·ªÅn', 'callback_data' => 'hdrt'],
            ]
        ]
    ];
    $reply_markup = json_encode($keyboard);

    $response = [
        'method' => 'sendMessage',
        'chat_id' => $chat_id,
        'text' => "$name_user ƒëang c·∫ßn em h·ªó tr·ª£ v·ªÅ v·∫•n ƒë·ªÅ n·∫°p r√∫t ƒë√∫ng kh√¥ng ·∫° ? H√£y ch·ªçn c√°c m·ª•c ph√π h·ª£p b√™n d∆∞·ªõi ƒë·ªÉ em ti·ªán h·ªó tr·ª£ nh√© ü§ó",
        'reply_markup' => $reply_markup
    ];

    // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
    file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
}

if ($text == "/mg") {
    $keyboard = [
        'inline_keyboard' => [
            [
                ['text' => 'Thu·∫≠t ng·ªØ b√≥ng ƒë√°', 'callback_data' => 'mgtnbd']
            ],
            [
                ['text' => 'HD v√†o s√†n MG', 'callback_data' => 'mghdvs'],
                ['text' => 'HD ch∆°i K√®o ch·∫•p', 'callback_data' => 'mghddkc'],
            ],
            [
                ['text' => 'HD ch∆°i T√†i x·ªâu', 'callback_data' => 'mghddktx'],
                ['text' => 'HD ch∆°i k√®o Ph·ª•', 'callback_data' => 'mghddkp'],
            ]
        ]
    ];
    $reply_markup = json_encode($keyboard);

    $response = [
        'method' => 'sendMessage',
        'chat_id' => $chat_id,
        'text' => "$name_user vui l√≤ng ch·ªçn gi√∫p em c√°c h∆∞·ªõng d·∫´n ph√π h·ª£p b√™n d∆∞·ªõi ƒë·ªÉ em h∆∞·ªõng d·∫´n chi ti·∫øt h∆°n cho $name_user nh√©.",
        'reply_markup' => $reply_markup
    ];

    // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
    file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
}

if ($text == "/bov") {
    $keyboard = [
        'inline_keyboard' => [
            [
                ['text' => 'Thu·∫≠t ng·ªØ b√≥ng ƒë√°', 'callback_data' => 'mgtnbd'],
                ['text' => 'HD v√†o s√†n BOV', 'callback_data' => 'bovhdvs'],

            ],
            [
                ['text' => 'HD ch∆°i T√†i x·ªâu', 'callback_data' => 'bovhddktx'],
                ['text' => 'HD ch∆°i K√®o ch·∫•p', 'callback_data' => 'bovhddkc']
            ],
            [
                ['text' => 'HD k√®o ƒê·∫∑c Bi·ªát', 'callback_data' => 'bovhddkdb'],
                ['text' => 'HD ch∆°i Xi√™n/X√¢u', 'callback_data' => 'bovhdcxx'],
            ]
        ]
    ];
    $reply_markup = json_encode($keyboard);

    $response = [
        'method' => 'sendMessage',
        'chat_id' => $chat_id,
        'text' => "$name_user vui l√≤ng ch·ªçn gi√∫p em c√°c h∆∞·ªõng d·∫´n ph√π h·ª£p b√™n d∆∞·ªõi ƒë·ªÉ em h∆∞·ªõng d·∫´n chi ti·∫øt h∆°n cho $name_user nh√©.",
        'reply_markup' => $reply_markup
    ];

    // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
    file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
}

if ($text == "/testkqxs") {
    $keyboard = [
        'inline_keyboard' => [
            [
                ['text' => 'Thu·∫≠t ng·ªØ h√¥ casino', 'callback_data' => 'tnhcsn'],
            ],
            [
                ['text' => 'T√†i x·ªâu WM', 'callback_data' => 'txwm'],
                ['text' => 'X√≥c dƒ©a WM', 'callback_data' => 'xdwm'],
            ],
            [
                ['text' => 'Baccarat WM', 'callback_data' => 'bcrwm'],
                ['text' => 'R·ªìng h·ªï WM', 'callback_data' => 'rhwm'],
            ]
        ]
    ];

    $reply_markup = json_encode($keyboard);

    $response = [
        'method' => 'sendMessage',
        'chat_id' => $chat_id,
        'text' => "OK ! $name_user ƒëang mu·ªën em h∆∞·ªõng d·∫´n ch∆°i ·ªü s√†n WM . $name_user vui l√≤ng ch·ªçn ti·∫øp c√°c m·ª•c b√™n d∆∞·ªõi ƒë·ªÉ em h∆∞·ªõng d·∫´n chi ti·∫øt h∆°n nh√© üòç",
        'reply_markup' => $reply_markup
    ];

    // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
    file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
}


$callback_query_data = $update['callback_query']['data'];

if (isset($update['callback_query'])) {
    $new_chatId = $update['callback_query']['message']['chat']['id'];
    $name_callback = '<a href="tg://user?id=' . $json["callback_query"]["message"]["from"]["id"] . '">' . $update['callback_query']['message']['chat']['first_name'] . " " . $update['callback_query']['message']['chat']['last_name'] . '</a>';

    // T·∫°o k·∫øt n·ªëi ƒë·∫øn c∆° s·ªü d·ªØ li·ªáu
    $conn = new mysqli($servername, $username, $password, $dbname);
    // $chatId2 = $update->getCallbackQuery()->getMessage()->getChat()->getId();
    // Ki·ªÉm tra k·∫øt n·ªëi
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }
    switch ($callback_query_data) {
            // Xem k·∫øt qu·∫£ x·ªï s·ªë
        case 'kqmb': {

                $date = getdate();
                if ($date['hours'] <= 18 && $date['minutes'] < 46) $date['mday'] -= 1;
                if ($date['mon'] < 10) $date['mon'] = "0" . $date['mon'];
                $date = $date['year'] . "-" . $date['mon'] . "-" . $date['mday'];
                // L·∫•y d·ªØ li·ªáu t·ª´ database

                $sql = "SELECT * FROM data_xskt_mb WHERE created_at = '$date'";
                $result = $conn->query($sql);
                $text_show = "KQ x·ªï s·ªë mi·ªÅn b·∫Øc ng√†y ";

                $data = array();
                if ($result->num_rows > 0) {
                    while ($row = $result->fetch_assoc()) {
                        array_push($data, $row);
                    }
                }
                foreach ($data as $key_data => $value) {
                    $chuoi_thoi_gian = $value['created_at'];
                    $ngay_thang_nam = date("Y-m-d", strtotime($chuoi_thoi_gian));
                    $text_show = $text_show . $ngay_thang_nam . "\n";
                    $value['g7'] = json_decode($value['g7']);
                    $value['g6'] = json_decode($value['g6']);
                    $value['g5'] = json_decode($value['g5']);
                    $value['g4'] = json_decode($value['g4']);
                    $value['g3'] = json_decode($value['g3']);
                    $value['g2'] = json_decode($value['g2']);

                    $new_i7 = 'G7: ';
                    $new_i6 = 'G6: ';
                    $new_i5 = 'G5: ';
                    $new_i4 = 'G4: ';
                    $new_i3 = 'G3: ';
                    $new_i2 = 'G2: ';

                    foreach ($value['g7'] as $key_g7 => $item_g7) {
                        $new_i7 = $new_i7 . $item_g7 . " ";
                    }
                    foreach ($value['g6'] as $key_g6 => $item_g6) {
                        $new_i6 = $new_i6 . $item_g6 . " ";
                    }
                    foreach ($value['g5'] as $key_g5 => $item_g5) {
                        $new_i5 = $new_i5 . $item_g5 . " ";
                    }
                    foreach ($value['g4'] as $key_g4 => $item_g4) {
                        $new_i4 = $new_i4 . $item_g4 . " ";
                    }
                    foreach ($value['g3'] as $key_g3 => $item_g3) {
                        $new_i3 = $new_i3 . $item_g3 . " ";
                    }
                    foreach ($value['g2'] as $key_g2 => $item_g2) {
                        $new_i2 = $new_i2 . $item_g2 . " ";
                    }
                    $value['g1'] = "G1: " . $value['g1'];
                    $value['gdb'] = "GDB: " . $value['gdb'];
                    $text_show = $text_show . $new_i7 . "\n" . $new_i6 . "\n" . $new_i5 . "\n" . $new_i4 . "\n" . $new_i3 . "\n" . $new_i2 . "\n" . $value['g1'] . "\n" . $value['gdb'];
                }
                break;
            }

        case 'kqmt': {
                date_default_timezone_set("Asia/Ho_Chi_Minh");
                $date = getdate();
                if ($date['hours'] <= 17 && $date['minutes'] < 41) $date['mday'] -= 1;
                if ($date['mon'] < 10) $date['mon'] = "0" . $date['mon'];
                $date = $date['year'] . "-" . $date['mon'] . "-" . $date['mday'];
                // L·∫•y d·ªØ li·ªáu t·ª´ database
                $sql = "SELECT * FROM data_xskt_mt WHERE created_at = '$date'";
                $result = $conn->query($sql);

                // T·∫°o m·∫£ng ch·ª©a d·ªØ li·ªáu
                $data = array();
                if ($result->num_rows > 0) {
                    while ($row = $result->fetch_assoc()) {
                        array_push($data, $row);
                    }
                }
                $text_show = "KQ x·ªï s·ªë mi·ªÅn Trung ng√†y ";
                $chuoi_thoi_gian = $data[0]['created_at'];
                $ngay_thang_nam = date("Y-m-d", strtotime($chuoi_thoi_gian));
                $text_show = $text_show . $ngay_thang_nam . "\n";
                foreach ($data as $key_data => $value) {
                    $value['g6'] = json_decode($value['g6']);
                    $value['g4'] = json_decode($value['g4']);
                    $value['g3'] = json_decode($value['g3']);

                    $new_i6 = 'G6: ';
                    $new_i4 = 'G4: ';
                    $new_i3 = 'G3: ';

                    foreach ($value['g6'] as $key_g6 => $item_g6) {
                        $new_i6 = $new_i6 . $item_g6 . " ";
                    }

                    foreach ($value['g4'] as $key_g4 => $item_g4) {
                        $new_i4 = $new_i4 . $item_g4 . " ";
                    }

                    foreach ($value['g3'] as $key_g3 => $item_g3) {
                        $new_i3 = $new_i3 . $item_g3 . " ";
                    }

                    $value['g8'] = "G8: " . $value['g8'];
                    $value['g7'] = "G7: " . $value['g7'];
                    $value['g5'] = "G5: " . $value['g5'];
                    $value['g2'] = "G2: " . $value['g2'];
                    $value['g1'] = "G1: " . $value['g1'];
                    $value['gdb'] = "GDB: " . $value['gdb'];

                    $text_show = $text_show . $value['name_dai'] . "\n" . $value['g8'] . "\n" . $value['g7'] . "\n" . $new_i6 . "\n" . $value['g5'] . "\n" . $new_i4 . "\n" . $new_i3 . "\n" . $value['g2'] . "\n" . $value['g1'] . "\n" . $value['gdb'] . "\n\n";
                }
                break;
            }

        case 'kqmn': {
                date_default_timezone_set("Asia/Ho_Chi_Minh");
                $date = getdate();
                if ($date['hours'] <= 16 && $date['minutes'] < 51) $date['mday'] -= 1;
                if ($date['mon'] < 10) $date['mon'] = "0" . $date['mon'];
                $date = $date['year'] . "-" . $date['mon'] . "-" . $date['mday'];
                // L·∫•y d·ªØ li·ªáu t·ª´ database
                $sql = "SELECT * FROM data_xskt_mn WHERE created_at = '$date'";
                $result = $conn->query($sql);
                $new_day = getdate();
                // T·∫°o m·∫£ng ch·ª©a d·ªØ li·ªáu
                $data = array();
                if ($result->num_rows > 0) {
                    while ($row = $result->fetch_assoc()) {
                        array_push($data, $row);
                    }
                }
                $text_show = "KQ x·ªï s·ªë mi·ªÅn Nam ng√†y ";
                $chuoi_thoi_gian = $data[0]['created_at'];
                $ngay_thang_nam = date("Y-m-d", strtotime($chuoi_thoi_gian));
                $text_show = $text_show . $ngay_thang_nam . "\n";
                foreach ($data as $key_data => $value) {
                    $value['g6'] = json_decode($value['g6']);
                    $value['g4'] = json_decode($value['g4']);
                    $value['g3'] = json_decode($value['g3']);

                    $new_i6 = 'G6: ';
                    $new_i4 = 'G4: ';
                    $new_i3 = 'G3: ';

                    foreach ($value['g6'] as $key_g6 => $item_g6) {
                        $new_i6 = $new_i6 . $item_g6 . " ";
                    }

                    foreach ($value['g4'] as $key_g4 => $item_g4) {
                        $new_i4 = $new_i4 . $item_g4 . " ";
                    }

                    foreach ($value['g3'] as $key_g3 => $item_g3) {
                        $new_i3 = $new_i3 . $item_g3 . " ";
                    }

                    $value['g8'] = "G8: " . $value['g8'];
                    $value['g7'] = "G7: " . $value['g7'];
                    $value['g5'] = "G5: " . $value['g5'];
                    $value['g2'] = "G2: " . $value['g2'];
                    $value['g1'] = "G1: " . $value['g1'];
                    $value['gdb'] = "GDB: " . $value['gdb'];

                    $text_show = $text_show . $value['name_dai'] . "\n" . $value['g8'] . "\n" . $value['g7'] . "\n" . $new_i6 . "\n" . $value['g5'] . "\n" . $new_i4 . "\n" . $new_i3 . "\n" . $value['g2'] . "\n" . $value['g1'] . "\n" . $value['gdb'] . "\n\n";
                }
                break;
            }

            // S√†n lode
        case 'choilode': {
                $photo_path = 'photo/Huong-dan-choi-xo-so-lo-de.jpg';
                // N·ªôi dung tin nh·∫Øn
                $caption = "ƒê√¢y l√† h∆∞·ªõng d·∫´n v√†o L√¥ ƒë·ªÅ. Vui l√≤ng xem qua gi√∫p em ƒë·ªÉ n·∫Øm ƒë∆∞·ª£c c√°ch ch∆°i nh√© !";

                // D·ªØ li·ªáu ƒë·ªÉ g·ª≠i tin nh·∫Øn
                $data = array(
                    'chat_id' =>  $update['callback_query']['message']['chat']['id'],
                    'caption' => $caption,
                    'photo' => new CURLfile(realpath($photo_path)),
                    'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong caption
                );
                // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
                $api_url = "https://api.telegram.org/bot$token/sendPhoto";
                break;
            }

        case 'randomde': {
                $id_user = $update["callback_query"]["from"]["id"];
                $id =  $update['callback_query']['message']['chat']['id'];
                $url_user = "https://api.telegram.org/bot$token/getChatMember?chat_id=$id_user&user_id=$id_user";
                $result = file_get_contents($url_user);
                $data = json_decode($result, true);
                $user_name = $data["result"]["user"]["first_name"] . " " . $data["result"]["user"]["last_name"];
                // L·∫•y d·ªØ li·ªáu t·ª´ database
                $sql = "SELECT * FROM id_lay_lode WHERE name = '$id_user'";
                $result = $conn->query($sql);

                // T·∫°o m·∫£ng ch·ª©a d·ªØ li·ªáu
                $data = array();
                if ($result->num_rows > 0) {
                    while ($row = $result->fetch_assoc()) {
                        array_push($data, $row);
                    }
                }
                if (!$data) {
                    $random_number = sprintf('%02d', rand(0, 99)); // T·∫°o s·ªë ng·∫´u nhi√™n t·ª´ 00 ƒë·∫øn 99
                    $text = '<a href="tg://user?id=' . $id_user . '">' . $user_name . '</a>' . ' üßô Con ƒë·ªÅ may m·∫Øn h√¥m nay c·ªßa b·∫°n l√† ' . $random_number;
                    $data = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'text' => $text,
                        'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong tin nh·∫Øn
                    );
                    $api_url = "https://api.telegram.org/bot$token/sendMessage";
                    $name = $id_user;
                    $checked = 1;
                    $created_at = date("Y-m-d H:i:s");

                    try {
                        $conn = new PDO("mysql:host=$servername;dbname=$dbname", $username, $password);
                        // ƒë·∫∑t ch·∫ø ƒë·ªô l·ªói PDO th√†nh ngo·∫°i l·ªá
                        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
                        // b·∫Øt ƒë·∫ßu giao d·ªãch
                        $conn->beginTransaction();
                        // c√¢u l·ªánh SQL c·ªßa ch√∫ng t√¥i
                        $conn->exec("INSERT INTO id_lay_lode (id, name, checked, created_at) VALUES ('$id', '$name', '$checked', '$created_at')");
                        // cam k·∫øt giao d·ªãch
                        $conn->commit();
                    } catch (PDOException $e) {
                        // quay tr·ªü l·∫°i giao d·ªãch n·∫øu ƒëi·ªÅu g√¨ ƒë√≥ kh√¥ng th√†nh c√¥ng
                        $conn->rollback();
                        echo "Error: " . $e->getMessage();
                    }
                } else {
                    $text = '<a href="tg://user?id=' . $id_user . '">' . $user_name . '</a>' . 'M·ªói ng∆∞·ªùi ch·ªâ l·∫•y ƒë∆∞·ª£c 1 con ƒë·ªÅ trong 1 ng√†y';
                    $data = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'text' => $text,
                        'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong tin nh·∫Øn
                    );
                    $api_url = "https://api.telegram.org/bot$token/sendMessage";
                }
                $conn = new mysqli($servername, $username, $password, $dbname);
                break;
            }

        case 'randomlo': {
                $id_user = $update["callback_query"]["from"]["id"];
                $id =  $update['callback_query']['message']['chat']['id'];
                $url_user = "https://api.telegram.org/bot$token/getChatMember?chat_id=$id_user&user_id=$id_user";
                $result = file_get_contents($url_user);
                $data = json_decode($result, true);
                $user_name = $data["result"]["user"]["first_name"] . " " . $data["result"]["user"]["last_name"];
                // L·∫•y d·ªØ li·ªáu t·ª´ database
                $sql = "SELECT * FROM id_lay_cang WHERE name = '$id_user'";
                $result = $conn->query($sql);

                // T·∫°o m·∫£ng ch·ª©a d·ªØ li·ªáu
                $data = array();
                if ($result->num_rows > 0) {
                    while ($row = $result->fetch_assoc()) {
                        array_push($data, $row);
                    }
                }
                if (!$data) {
                    $random_number = rand(000, 999); // T·∫°o s·ªë ng·∫´u nhi√™n t·ª´ 000 ƒë·∫øn 999
                    $text = '<a href="tg://user?id=' . $id_user . '">' . $user_name . '</a>' . ' üßô 3 c√†ng ƒë·ªÅ may m·∫Øn h√¥m nay c·ªßa b·∫°n l√† ' . $random_number;
                    $data = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'text' => $text,
                        'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong tin nh·∫Øn
                    );
                    $api_url = "https://api.telegram.org/bot$token/sendMessage";


                    $name = $id_user;
                    $checked = 1;
                    $created_at = date("Y-m-d H:i:s");

                    try {
                        $conn = new PDO("mysql:host=$servername;dbname=$dbname", $username, $password);
                        // ƒë·∫∑t ch·∫ø ƒë·ªô l·ªói PDO th√†nh ngo·∫°i l·ªá
                        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
                        // b·∫Øt ƒë·∫ßu giao d·ªãch
                        $conn->beginTransaction();
                        // c√¢u l·ªánh SQL c·ªßa ch√∫ng t√¥i
                        $conn->exec("INSERT INTO id_lay_cang (id, name, checked, created_at) VALUES ('$id', '$name', '$checked', '$created_at')");
                        // cam k·∫øt giao d·ªãch
                        $conn->commit();
                    } catch (PDOException $e) {
                        // quay tr·ªü l·∫°i giao d·ªãch n·∫øu ƒëi·ªÅu g√¨ ƒë√≥ kh√¥ng th√†nh c√¥ng
                        $conn->rollback();
                        echo "Error: " . $e->getMessage();
                    }
                } else {
                    $text = '<a href="tg://user?id=' . $id_user . '">' . $user_name . '</a>' . 'M·ªói ng∆∞·ªùi ch·ªâ l·∫•y ƒë∆∞·ª£c 1 con 3 c√†ng trong 1 ng√†y';
                    $data = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'text' => $text,
                        'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong tin nh·∫Øn
                    );
                    $api_url = "https://api.telegram.org/bot$token/sendMessage";
                }
                $conn = new mysqli($servername, $username, $password, $dbname);
                break;
            }

        case 'randomstl': {
                $id_user = $update["callback_query"]["from"]["id"];
                $id =  $update['callback_query']['message']['chat']['id'];
                $url_user = "https://api.telegram.org/bot$token/getChatMember?chat_id=$id_user&user_id=$id_user";
                $result = file_get_contents($url_user);
                $data = json_decode($result, true);
                $user_name = $data["result"]["user"]["first_name"] . " " . $data["result"]["user"]["last_name"];
                // L·∫•y d·ªØ li·ªáu t·ª´ database
                $sql = "SELECT * FROM id_lay_stl WHERE name = '$id_user'";
                $result = $conn->query($sql);

                // T·∫°o m·∫£ng ch·ª©a d·ªØ li·ªáu
                $data = array();
                if ($result->num_rows > 0) {
                    while ($row = $result->fetch_assoc()) {
                        array_push($data, $row);
                    }
                }
                if (!$data) {
                    $first_and_last_digit = rand(0, 9); // T·∫°o m·ªôt ch·ªØ s·ªë ng·∫´u nhi√™n t·ª´ 0 ƒë·∫øn 9 cho s·ªë ƒë·∫ßu v√† cu·ªëi
                    $middle_digit_1 = rand(0, 9); // T·∫°o m·ªôt ch·ªØ s·ªë ng·∫´u nhi√™n t·ª´ 0 ƒë·∫øn 9 cho s·ªë gi·ªØa
                    $random_number = (string)$first_and_last_digit . (string)$middle_digit_1 . (string)$first_and_last_digit; // Gh√©p c√°c s·ªë l·∫°i v·ªõi nhau
                    $text = '<a href="tg://user?id=' . $id_user . '">' . $user_name . '</a>' . ' üßô Song th·ªß l√¥ may m·∫Øn h√¥m nay c·ªßa b·∫°n l√† STL ' . $random_number;
                    $data = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'text' => $text,
                        'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong tin nh·∫Øn
                    );
                    $api_url = "https://api.telegram.org/bot$token/sendMessage";


                    $name = $id_user;
                    $checked = 1;
                    $created_at = date("Y-m-d H:i:s");

                    try {
                        $conn = new PDO("mysql:host=$servername;dbname=$dbname", $username, $password);
                        // ƒë·∫∑t ch·∫ø ƒë·ªô l·ªói PDO th√†nh ngo·∫°i l·ªá
                        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
                        // b·∫Øt ƒë·∫ßu giao d·ªãch
                        $conn->beginTransaction();
                        // c√¢u l·ªánh SQL c·ªßa ch√∫ng t√¥i
                        $conn->exec("INSERT INTO id_lay_stl (id, name, checked, created_at) VALUES ('$id', '$name', '$checked', '$created_at')");
                        // cam k·∫øt giao d·ªãch
                        $conn->commit();
                    } catch (PDOException $e) {
                        // quay tr·ªü l·∫°i giao d·ªãch n·∫øu ƒëi·ªÅu g√¨ ƒë√≥ kh√¥ng th√†nh c√¥ng
                        $conn->rollback();
                        echo "Error: " . $e->getMessage();
                    }
                } else {
                    $text = '<a href="tg://user?id=' . $id_user . '">' . $user_name . '</a>' . 'M·ªói ng∆∞·ªùi ch·ªâ l·∫•y ƒë∆∞·ª£c 1 con song th·ªß l√¥ trong 1 ng√†y';
                    $data = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'text' => $text,
                        'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong tin nh·∫Øn
                    );
                    $api_url = "https://api.telegram.org/bot$token/sendMessage";
                }
                $conn = new mysqli($servername, $username, $password, $dbname);
                break;
            }

            // S√†n w m
        case 'tnhcsn': {
                $photo_path = 'photo/wm-thuat-ngu-casino.jpg';
                // N·ªôi dung tin nh·∫Øn
                $caption = "ƒê√¢y l√† thu·∫≠t ng·ªØ h√¥ casino t·ª´ cao th·ªß. Vui l√≤ng xem qua gi√∫p em tr∆∞·ªõc khi theo cao th·ªß h√¥ nh√© !";

                // D·ªØ li·ªáu ƒë·ªÉ g·ª≠i tin nh·∫Øn
                $data = array(
                    'chat_id' =>  $update['callback_query']['message']['chat']['id'],
                    'caption' => $caption,
                    'photo' => new CURLfile(realpath($photo_path)),
                    'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong caption
                );
                // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
                $api_url = "https://api.telegram.org/bot$token/sendPhoto";
                break;
            }

        case 'txwm': {
                $photo[1] = 'photo/wm-tai-xiu-2.jpg';
                $photo[2] = 'photo/wm-tai-xiu-1.jpg';
                $caption[2] = "ƒê√¢y l√† 2 ·∫£nh h∆∞·ªõng d·∫´n ch∆°i t√†i x·ªâu s·∫£nh WM. Vui l√≤ng xem qua gi√∫p em nh√©!";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' =>  $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'xdwm': {
                $photo[1] = 'photo/wm-xoc-dia-2.jpg';
                $photo[2] = 'photo/wm-xoc-dia-1.jpg';
                $caption[2] = "ƒê√¢y l√† 2 ·∫£nh h∆∞·ªõng d·∫´n ch∆°i X√≥c ƒëƒ©a s·∫£nh WM. Vui l√≤ng xem qua gi√∫p em nh√©!";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'bcrwm': {
                $photo[1] = 'photo/wm-baccarat-2.jpg';
                $photo[2] = 'photo/wm-baccarat-1.jpg';
                $caption[2] = "ƒê√¢y l√† 2 ·∫£nh h∆∞·ªõng d·∫´n ch∆°i Baccarat s·∫£nh WM. Vui l√≤ng xem qua gi√∫p em nh√©!";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'rhwm': {
                $photo[1] = 'photo/wm-rong-ho-2.jpg';
                $photo[2] = 'photo/wm-rong-ho-1.jpg';
                $caption[2] = "ƒê√¢y l√† 2 ·∫£nh h∆∞·ªõng d·∫´n ch∆°i R·ªìng h·ªï s·∫£nh WM. Vui l√≤ng xem qua gi√∫p em nh√©!";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'hdvswm': {
                $keyboard = [
                    'inline_keyboard' => [
                        [
                            ['text' => 'Thu·∫≠t ng·ªØ h√¥ casino', 'callback_data' => 'tnhcsn'],
                        ],
                        [
                            ['text' => 'T√†i x·ªâu WM', 'callback_data' => 'txwm'],
                            ['text' => 'X√≥c dƒ©a WM', 'callback_data' => 'xdwm'],
                        ],
                        [
                            ['text' => 'Baccarat WM', 'callback_data' => 'bcrwm'],
                            ['text' => 'R·ªìng h·ªï WM', 'callback_data' => 'rhwm'],
                        ]
                    ]
                ];

                $reply_markup = json_encode($keyboard);

                $response = [
                    'method' => 'sendMessage',
                    'chat_id' => $new_chatId,
                    'text' => "OK ! $name_callback ƒëang mu·ªën em h∆∞·ªõng d·∫´n ch∆°i ·ªü s√†n WM . $name_callback vui l√≤ng ch·ªçn ti·∫øp c√°c m·ª•c b√™n d∆∞·ªõi ƒë·ªÉ em h∆∞·ªõng d·∫´n chi ti·∫øt h∆°n nh√©! üòç",
                    'parse_mode' => 'HTML',
                    'reply_markup' => $reply_markup,
                ];
                // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
                file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
                break;
            }

            // S√†n DG
        case 'bcrdg': {
                $photo[1] = 'photo/dg-baccarat-2.jpg';
                $photo[2] = 'photo/dg-baccarat-1.jpg';
                $caption[2] = "ƒê√¢y l√† 2 ·∫£nh h∆∞·ªõng d·∫´n ch∆°i Baccarat s·∫£nh DG. Vui l√≤ng xem qua gi√∫p em nh√©!";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'cldg': {
                $photo[1] = 'photo/dg-chan-le-2.jpg';
                $photo[2] = 'photo/dg-chan-le-1.jpg';
                $caption[2] = "ƒê√¢y l√† 2 ·∫£nh h∆∞·ªõng d·∫´n ch∆°i Ch·∫µn L·∫ª s·∫£nh DG. Vui l√≤ng xem qua gi√∫p em nh√©!";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'sbdg': {
                $photo[1] = 'photo/dg-sicbo-2.jpg';
                $photo[2] = 'photo/dg-sicbo-1.jpg';
                $caption[2] = "ƒê√¢y l√† 2 ·∫£nh h∆∞·ªõng d·∫´n ch∆°i Sicbo s·∫£nh DG. Vui l√≤ng xem qua gi√∫p em nh√©!";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'hdvsdg': {
                $keyboard = [
                    'inline_keyboard' => [
                        [
                            ['text' => 'Thu·∫≠t ng·ªØ h√¥ casino', 'callback_data' => 'tnhcsn'],
                            ['text' => 'Baccarat DG', 'callback_data' => 'bcrdg'],
                        ],
                        [
                            ['text' => 'Ch·∫µn l·∫ª DG', 'callback_data' => 'cldg'],
                            ['text' => 'Sicbo DG', 'callback_data' => 'sbdg'],
                        ]
                    ]
                ];
                $reply_markup = json_encode($keyboard);

                $response = [
                    'method' => 'sendMessage',
                    'chat_id' => $new_chatId,
                    'text' => "OK ! $name_callback ƒëang mu·ªën em h∆∞·ªõng d·∫´n ch∆°i ·ªü s√†n DG . $name_callback vui l√≤ng ch·ªçn ti·∫øp c√°c m·ª•c b√™n d∆∞·ªõi ƒë·ªÉ em h∆∞·ªõng d·∫´n chi ti·∫øt h∆°n nh√© üòç",
                    'parse_mode' => 'HTML',
                    'reply_markup' => $reply_markup
                ];

                // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
                file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
                break;
            }

            // H∆∞·ªõng d·∫´n n·∫°p r√∫t ti·ªÅn
        case 'hdnt': {
                $api_url = "https://api.telegram.org/bot" . $token;
                $keyboard = [
                    'inline_keyboard' => [
                        [
                            ['text' => 'Chuy·ªÉn kho·∫£n', 'callback_data' => 'ntck'],
                            ['text' => 'Internet Banking', 'callback_data' => 'ntib'],
                        ],
                        [
                            ['text' => 'Viettel Pay', 'callback_data' => 'ntvp'],
                            ['text' => 'QR Banking', 'callback_data' => 'ntqb'],
                        ],
                        [
                            ['text' => 'Momo Pay', 'callback_data' => 'ntmp'],
                            ['text' => 'Zalo Pay', 'callback_data' => 'ntzp'],
                        ]
                    ]
                ];

                $reply_markup = json_encode($keyboard);

                $response = [
                    'method' => 'sendMessage',
                    'chat_id' => $update['callback_query']['message']['chat']['id'],
                    'text' => "Hi·ªán t·∫°i MG188.ZONE c√≥ t·∫•t c·∫£ l√† 06 h√¨nh th·ª©c n·∫°p ti·ªÅn. ƒê·ªÉ thu·∫≠n ti·ªán h∆°n, Vui l√≤ng ch·ªçn gi√∫p em h√¨nh th·ª©c n·∫°p ti·ªÅn mong mu·ªën m√† m√¨nh c√≥ th·ªÉ n·∫°p ƒë·ªÉ em c√≥ th·ªÉ h∆∞·ªõng d·∫´n ch√≠nh x√°c h∆°n nh√© üòä",
                    'reply_markup' => $reply_markup
                ];

                // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
                file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
                break;
            }

        case 'ntck': {
                $photo_path = 'photo/nap-tien-chuyen-khoan.jpg';
                // N·ªôi dung tin nh·∫Øn
                $caption = "ƒê·ªÉ n·∫°p ti·ªÅn b·∫±ng h√¨nh th·ª©c Chuy·ªÉn kho·∫£n. Vui l√≤ng xem qua h√¨nh ·∫£nh thao t√°c b√™n tr√™n v√† th·ª±c hi·ªán ƒë√∫ng theo h√¨nh!";

                // D·ªØ li·ªáu ƒë·ªÉ g·ª≠i tin nh·∫Øn
                $data = array(
                    'chat_id' => $update['callback_query']['message']['chat']['id'],
                    'caption' => $caption,
                    'photo' => new CURLfile(realpath($photo_path)),
                    'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong caption
                );
                // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
                $api_url = "https://api.telegram.org/bot$token/sendPhoto";
                break;
            }

        case 'ntib': {
                $photo_path = 'photo/nap-tien-internet-banking.jpg';
                // N·ªôi dung tin nh·∫Øn
                $caption = "ƒê·ªÉ n·∫°p ti·ªÅn b·∫±ng h√¨nh th·ª©c Internet Banking. Vui l√≤ng xem qua h√¨nh ·∫£nh thao t√°c b√™n tr√™n v√† th·ª±c hi·ªán ƒë√∫ng theo h√¨nh!";

                // D·ªØ li·ªáu ƒë·ªÉ g·ª≠i tin nh·∫Øn
                $data = array(
                    'chat_id' => $update['callback_query']['message']['chat']['id'],
                    'caption' => $caption,
                    'photo' => new CURLfile(realpath($photo_path)),
                    'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong caption
                );
                // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
                $api_url = "https://api.telegram.org/bot$token/sendPhoto";
                break;
            }

        case 'ntvp': {
                $photo_path = 'photo/nap-tien-viettel-pay.jpg';
                // N·ªôi dung tin nh·∫Øn
                $caption = "ƒê·ªÉ n·∫°p ti·ªÅn b·∫±ng h√¨nh th·ª©c Viettel Pay. Vui l√≤ng xem qua h√¨nh ·∫£nh thao t√°c b√™n tr√™n v√† th·ª±c hi·ªán ƒë√∫ng theo h√¨nh!";

                // D·ªØ li·ªáu ƒë·ªÉ g·ª≠i tin nh·∫Øn
                $data = array(
                    'chat_id' => $update['callback_query']['message']['chat']['id'],
                    'caption' => $caption,
                    'photo' => new CURLfile(realpath($photo_path)),
                    'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong caption
                );
                // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
                $api_url = "https://api.telegram.org/bot$token/sendPhoto";
                break;
            }

        case 'ntqb': {
                $photo_path = 'photo/nap-tien-qr-banking.jpg';
                // N·ªôi dung tin nh·∫Øn
                $caption = "ƒê·ªÉ n·∫°p ti·ªÅn b·∫±ng h√¨nh th·ª©c QR Banking. Vui l√≤ng xem qua h√¨nh ·∫£nh thao t√°c b√™n tr√™n v√† th·ª±c hi·ªán ƒë√∫ng theo h√¨nh!";

                // D·ªØ li·ªáu ƒë·ªÉ g·ª≠i tin nh·∫Øn
                $data = array(
                    'chat_id' => $update['callback_query']['message']['chat']['id'],
                    'caption' => $caption,
                    'photo' => new CURLfile(realpath($photo_path)),
                    'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong caption
                );
                // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
                $api_url = "https://api.telegram.org/bot$token/sendPhoto";
                break;
            }

        case 'ntmp': {
                $photo_path = 'photo/nap-tien-momo-pay.jpg';
                // N·ªôi dung tin nh·∫Øn
                $caption = "ƒê·ªÉ n·∫°p ti·ªÅn b·∫±ng h√¨nh th·ª©c Momo Pay. Vui l√≤ng xem qua h√¨nh ·∫£nh thao t√°c b√™n tr√™n v√† th·ª±c hi·ªán ƒë√∫ng theo h√¨nh!";

                // D·ªØ li·ªáu ƒë·ªÉ g·ª≠i tin nh·∫Øn
                $data = array(
                    'chat_id' => $update['callback_query']['message']['chat']['id'],
                    'caption' => $caption,
                    'photo' => new CURLfile(realpath($photo_path)),
                    'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong caption
                );
                // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
                $api_url = "https://api.telegram.org/bot$token/sendPhoto";
                break;
            }

        case 'ntzp': {
                $photo_path = 'photo/nap-tien-zalo-pay.jpg';
                // N·ªôi dung tin nh·∫Øn
                $caption = "ƒê·ªÉ n·∫°p ti·ªÅn b·∫±ng h√¨nh th·ª©c Zalo Pay. Vui l√≤ng xem qua h√¨nh ·∫£nh thao t√°c b√™n tr√™n v√† th·ª±c hi·ªán ƒë√∫ng theo h√¨nh!";

                // D·ªØ li·ªáu ƒë·ªÉ g·ª≠i tin nh·∫Øn
                $data = array(
                    'chat_id' => $update['callback_query']['message']['chat']['id'],
                    'caption' => $caption,
                    'photo' => new CURLfile(realpath($photo_path)),
                    'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong caption
                );
                // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
                $api_url = "https://api.telegram.org/bot$token/sendPhoto";
                break;
            }

        case 'hdrt': {
                $photo_path = 'photo/rut-tien.jpg';
                // N·ªôi dung tin nh·∫Øn
                $caption = "ƒê·ªÉ r√∫t ti·ªÅn t·∫°i MG188 ZONE. Vui l√≤ng xem qua h√¨nh ·∫£nh thao t√°c b√™n tr√™n v√† th·ª±c hi·ªán ƒë√∫ng theo h√¨nh!";

                // D·ªØ li·ªáu ƒë·ªÉ g·ª≠i tin nh·∫Øn
                $data = array(
                    'chat_id' => $update['callback_query']['message']['chat']['id'],
                    'caption' => $caption,
                    'photo' => new CURLfile(realpath($photo_path)),
                    'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong caption
                );
                // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
                $api_url = "https://api.telegram.org/bot$token/sendPhoto";
                break;
            }

            // S√†n MG
        case 'mgtnbd': {
                $photo_path = 'photo/mg-thuat-ngu-bong-da.jpg';
                // N·ªôi dung tin nh·∫Øn
                $caption = "Vui l√≤ng xem qua h√¨nh ·∫£nh b√™n tr√™n c√°c thu·∫≠t ng·ªØ v√† k√Ω hi·ªáu k√®o b√≥ng ƒë·ªÉ theo k√®o chuy√™n gia d·ªÖ h∆°n nh√© ü§ë";

                // D·ªØ li·ªáu ƒë·ªÉ g·ª≠i tin nh·∫Øn
                $data = array(
                    'chat_id' => $update['callback_query']['message']['chat']['id'],
                    'caption' => $caption,
                    'photo' => new CURLfile(realpath($photo_path)),
                    'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong caption
                );
                // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
                $api_url = "https://api.telegram.org/bot$token/sendPhoto";
                break;
            }

        case 'mghdvs': {
                $photo[1] = 'photo/mg-huong-dan-vao-san-1.jpg';
                $photo[2] = 'photo/mg-huong-dan-vao-san-2.jpg';
                $caption[2] = "Vui l√≤ng xem qua 2 h√¨nh ·∫£nh b√™n tr√™n c√°ch v√†o s√†n MG-SPORTS gi√∫p em nh√© üòç";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'mghddkc': {
                $photo[1] = 'photo/mg-huong-dan-keo-chap-1.jpg';
                $photo[2] = 'photo/mg-huong-dan-keo-chap-2.jpg';
                $caption[2] = "Vui l√≤ng xem qua 2 h√¨nh ·∫£nh b√™n tr√™n c√°ch v√†o K√àO CH·∫§P s√†n MG-SPORTS gi√∫p em nh√© üòç";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'mghddktx': {
                $photo[1] = 'photo/mg-huong-dan-dat-keo-tai-xiu-1.jpg';
                $photo[2] = 'photo/mg-huong-dan-dat-keo-tai-xiu-2.jpg';
                $caption[2] = "Vui l√≤ng xem qua 2 h√¨nh ·∫£nh b√™n tr√™n c√°ch v√†o T√ÄI X·ªàU s√†n MG-SPORTS gi√∫p em nh√© üòç";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'mghddkp': {
                $photo[1] = 'photo/mg-huong-dan-ket-keo-phu-1.jpg';
                $photo[2] = 'photo/mg-huong-dan-ket-keo-phu-2.jpg';
                $caption[2] = "Vui l√≤ng xem qua 2 h√¨nh ·∫£nh b√™n tr√™n c√°ch ch∆°i K√àO PH·ª§ s√†n MG-SPORTS gi√∫p em nh√© üòç";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'hdcsmg': {
                $keyboard = [
                    'inline_keyboard' => [
                        [
                            ['text' => 'Thu·∫≠t ng·ªØ b√≥ng ƒë√°', 'callback_data' => 'mgtnbd']
                        ],
                        [
                            ['text' => 'HD v√†o s√†n MG', 'callback_data' => 'mghdvs'],
                            ['text' => 'HD ch∆°i K√®o ch·∫•p', 'callback_data' => 'mghddkc'],
                        ],
                        [
                            ['text' => 'HD ch∆°i T√†i x·ªâu', 'callback_data' => 'mghddktx'],
                            ['text' => 'HD ch∆°i k√®o Ph·ª•', 'callback_data' => 'mghddkp'],
                        ]
                    ]
                ];
                $reply_markup = json_encode($keyboard);

                $response = [
                    'method' => 'sendMessage',
                    'chat_id' => $new_chatId,
                    'text' => "$name_callback vui l√≤ng ch·ªçn gi√∫p em c√°c h∆∞·ªõng d·∫´n ph√π h·ª£p b√™n d∆∞·ªõi ƒë·ªÉ em h∆∞·ªõng d·∫´n chi ti·∫øt h∆°n cho nh√©.",
                    'parse_mode' => 'HTML',
                    'reply_markup' => $reply_markup
                ];

                // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
                file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
                break;
            }

            //S√†n BOV
        case 'bovhdvs': {
                $photo[1] = 'photo/bov-huong-dan-vao-san-1.jpg';
                $photo[2] = 'photo/bov-huong-dan-vao-san-2.jpg';
                $caption[2] = "Vui l√≤ng xem qua 2 h√¨nh ·∫£nh b√™n tr√™n c√°ch v√†o s√†n BOV-BONGVIP gi√∫p em nh√© üòç";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'bovhddkc': {
                $photo[1] = 'photo/bov-huong-dan-dat-keo-chap-1.jpg';
                $photo[2] = 'photo/bov-huong-dan-dat-keo-chap-2.jpg';
                $caption[2] = "Vui l√≤ng xem qua 2 h√¨nh ·∫£nh b√™n tr√™n c√°ch ch∆°i K√àO CH·∫§P s√†n BOV-BONGVIP gi√∫p em nh√© üòç";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'bovhddktx': {
                $photo[1] = 'photo/bov-huong-dan-dat-keo-tai-xiu-1.jpg';
                $photo[2] = 'photo/bov-huong-dan-dat-keo-tai-xiu-2.jpg';
                $caption[2] = "Vui l√≤ng xem qua 2 h√¨nh ·∫£nh b√™n tr√™n c√°ch ch∆°i k√®o T√ÄI X·ªàU s√†n BOV-BONGVIP gi√∫p em nh√© üòç";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'bovhddkdb': {
                $photo[1] = 'photo/bov-huong-dan-dat-keo-dac-biet-1.jpg';
                $photo[2] = 'photo/bov-huong-dan-dat-keo-dac-biet-2.jpg';
                $caption[2] = "Vui l√≤ng xem qua 2 h√¨nh ·∫£nh b√™n tr√™n c√°ch ch∆°i k√®o ƒê·∫∂C BI·ªÜT s√†n BOV-BONGVIP gi√∫p em nh√© üòç";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'bovhdcxx': {
                $photo[1] = 'photo/bov-huong-dan-dat-keo-xien-xau-1.jpg';
                $photo[2] = 'photo/bov-huong-dan-dat-keo-xien-xau-2.jpg';
                $caption[2] = "Vui l√≤ng xem qua 2 h√¨nh ·∫£nh b√™n tr√™n c√°ch ch∆°i k√®o XI√äN/X√ÇU s√†n BOV-BONGVIP gi√∫p em nh√© üòç";
                for ($i = 1; $i <= 2; $i++) {
                    $url = 'https://api.telegram.org/bot' . $token . '/sendPhoto';
                    $postFields = array(
                        'chat_id' => $update['callback_query']['message']['chat']['id'],
                        'caption' => $caption[$i],
                        'photo' => new CURLFile(realpath($photo[$i])),
                    );
                    $ch = curl_init();
                    curl_setopt($ch, CURLOPT_URL, $url);
                    curl_setopt($ch, CURLOPT_POST, count($postFields));
                    curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
                    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                    $result = curl_exec($ch);
                    curl_close($ch);
                }
                break;
            }

        case 'hdcsbov': {
                $keyboard = [
                    'inline_keyboard' => [
                        [
                            ['text' => 'Thu·∫≠t ng·ªØ b√≥ng ƒë√°', 'callback_data' => 'mgtnbd'],
                            ['text' => 'HD v√†o s√†n BOV', 'callback_data' => 'bovhdvs'],

                        ],
                        [
                            ['text' => 'HD ch∆°i T√†i x·ªâu', 'callback_data' => 'bovhddktx'],
                            ['text' => 'HD ch∆°i K√®o ch·∫•p', 'callback_data' => 'bovhddkc']
                        ],
                        [
                            ['text' => 'HD k√®o ƒê·∫∑c Bi·ªát', 'callback_data' => 'bovhddkdb'],
                            ['text' => 'HD ch∆°i Xi√™n/X√¢u', 'callback_data' => 'bovhdcxx'],
                        ]
                    ]
                ];
                $reply_markup = json_encode($keyboard);

                $response = [
                    'method' => 'sendMessage',
                    'chat_id' => $new_chatId,
                    'text' => $name_callback . ' vui l√≤ng ch·ªçn gi√∫p em c√°c h∆∞·ªõng d·∫´n ph√π h·ª£p b√™n d∆∞·ªõi ƒë·ªÉ em h∆∞·ªõng d·∫´n chi ti·∫øt h∆°n cho nh√©.',
                    'parse_mode' => 'HTML',
                    'reply_markup' => $reply_markup
                ];

                // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
                file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
                break;
            }

            //B·∫£o m·∫≠t telegram
        case 'bmtelegram': {
                $photo_path = 'photo/Bao-mat-telegram.jpg';
                // N·ªôi dung tin nh·∫Øn
                $caption = "Vui l√≤ng xem qua h√¨nh ·∫£nh b√™n ƒë·ªÉ B·∫£o m·∫≠t Telegram nh√©!";

                // D·ªØ li·ªáu ƒë·ªÉ g·ª≠i tin nh·∫Øn
                $data = array(
                    'chat_id' => $update['callback_query']['message']['chat']['id'],
                    'caption' => $caption,
                    'photo' => new CURLfile(realpath($photo_path)),
                    'parse_mode' => 'HTML', // Cho ph√©p s·ª≠ d·ª•ng ƒë·ªãnh d·∫°ng HTML trong caption
                );
                // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
                $api_url = "https://api.telegram.org/bot$token/sendPhoto";
                break;

                // $keyboard = [
                //     'inline_keyboard' => [
                //         [
                //             ['text' => 'Thu·∫≠t ng·ªØ b√≥ng ƒë√°', 'callback_data' => 'mgtnbd'], 
                //             ['text' => 'HD v√†o s√†n BOV', 'callback_data' => 'bovhdvs'],

                //         ],
                //         [
                //             ['text' => 'HD ch∆°i T√†i x·ªâu', 'callback_data' => 'bovhddktx'],
                //             ['text' => 'HD ch∆°i K√®o ch·∫•p', 'callback_data' => 'bovhddkc']
                //         ],
                //         [
                //             ['text' => 'HD k√®o ƒê·∫∑c Bi·ªát', 'callback_data' => 'bovhddkdb'],
                //             ['text' => 'HD ch∆°i Xi√™n/X√¢u', 'callback_data' => 'bovhdcxx'],
                //         ]
                //     ]
                // ];
                // $reply_markup = json_encode($keyboard);

                // $response = [
                //     'method' => 'sendMessage',
                //     'chat_id' => $update['callback_query']['message']['chat']['id'],
                //     'text' => "$name_user vui l√≤ng ch·ªçn gi√∫p em c√°c h∆∞·ªõng d·∫´n ph√π h·ª£p b√™n d∆∞·ªõi ƒë·ªÉ em h∆∞·ªõng d·∫´n chi ti·∫øt h∆°n cho $name_user nh√©.",
                //     'reply_markup' => $reply_markup
                // ];
                // break;

                // G·ª≠i c√¢u tr·∫£ l·ªùi ƒë·∫øn ng∆∞·ªùi d√πng
                file_get_contents($api_url . "/sendMessage?" . http_build_query($response));
            }

        default:
            $text_show = "Kh√¥ng h·ª£p l·ªá.";
    }

    // S·ª≠ d·ª•ng CURL ƒë·ªÉ g·ª≠i tin nh·∫Øn k√®m h√¨nh ·∫£nh
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_HTTPHEADER, array("Content-Type:multipart/form-data"));
    curl_setopt($ch, CURLOPT_URL, $api_url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    $result = curl_exec($ch);
    curl_close($ch);
    $update = json_decode(file_get_contents("php://input"), TRUE);
    $data = http_build_query([
        'text' => $text_show,
        'chat_id' => $update['callback_query']['message']['chat']['id']
    ]);
    file_get_contents($api_url . "/sendMessage?{$data}");
}

$update['callback_query']['message']['chat']['id'];

// l·∫•y d·ªØ li·ªáu t·ª´ telegram khi c√≥ tin nh·∫Øn
$data = file_get_contents('php://input');
$json = json_decode($data, true);
require_once "TelegramBot.php";
$bot = new Bot('5809297001:AAHejPXV8hfdZFkWoNCW03HDzTWsasdo3oY');

// if (isset($json['message']['text'])){
if (!checkTinNhan($bot, $json)) {
    return;
}

// }

function checkTinNhan($bot, $json)
{
    $msg = strtolower($json["message"]["text"]);

    $arr1 = [
        'demo1'
    ];

    $arr15 = [
        'ƒë·ªÉ c∆∞·ª£c xi√™n',
        'ls c∆∞·ª£c xi√™n',
        'cuoc xien the nao',
        'huong dan c∆∞·ª£c xi√™n',
        'hd c∆∞·ª£c xi√™n',
        'cuoc xien lam sao',
        'cuoc xien sao',
        'c∆∞·ª£c xi√™n sao',
        'ls cuoc xien',
        'choi cuoc xien',
        'ch∆°i c∆∞·ª£c xi√™n',
        'sao c∆∞·ª£c xi√™n',
        'c∆∞·ª£c x√¢u',
        'sao cuoc xien'
    ];

    $arr21 = [
        'choi lo the nao',
        'choi l√¥ v√†o ƒë√¢u',
        'ch∆°i l√¥ sao',
        'lo de vao',
        'ch∆°i l√¥ v√†o ƒë√¢u',
        'l√¥ ƒë·ªÅ v√†o',
        'ƒë√°nh l√¥ k'
    ];

    $arr22 = [
        'xsmb'
    ];

    $arr23 = [
        'xsmt'
    ];

    $arr24 = [
        'xsmn'
    ];

    $arr25 = [
        'n·∫°p ti·ªÅn ph·∫£i',
        'nap tien sao',
        'hd nap tien',
        'hd n·∫°p ti·ªÅn'
    ];

    $arr26 = [
        'r√∫t ti·ªÅn sao',
        'rut tien sao',
        'rut ti·ªÅn sao',
        'r√∫t ti·ªÅn ·ªü'
    ];

    $arr27 = [
        'k v√†o dc ti·ªÅn',
        'l·ªói n·∫°p ti·ªÅn',
        'loi nap tien',
        'n·∫°p ti·ªÅn l√¢u',
        'l√¢u l√™n ƒëi·ªÉm',
        'ch∆∞a l√™n ƒëi·ªÉm',
        'n·∫°p ti·ªÅn khoai',
        'v√†o ti·ªÅn l√¢u',
        'n·∫°p ti·ªÅn k',
        'n·∫°p ti·ªÅn ko',
        'kh√¥ng n·∫°p ƒë∆∞·ª£c ti·ªÅn',
        'k v√†o ti·ªÅn',
        'n·∫°p ti·ªÅn l·∫ßn n√†o c≈©ng l√¢u',
        'ko n·∫°p ti·ªÅn ƒë∆∞·ª£c',
        'r√∫t ti·ªÅn soa k ƒë∆∞·ª£c',
        'r√∫t ti·ªÅn ko',
        'r√∫t ti·ªÅn ·ªü',
        'kh√¥ng n·∫°p ti·ªÅn',
        'm·∫π n·∫°p'
    ];

    $arr28 = [
        'mi·ªÅn b·∫Øc ch∆°i s·∫£nh n√†o',
        'ƒë√°nh s·ªë ƒë·ªÅ ·ªü',
        'ch∆°i s·ªë ƒë·ªÅ'
    ];

    $arr29 = [
        'hom nay danh con gi',
        'h√¥m nay ƒë√°nh con g√¨',
        'cho con l√¥',
        'xin con l√¥',
        'xin con ƒë·ªÅ',
        'cho con ƒë·ªÅ',
        'de hom nay ra',
        'ƒë·ªÅ h√¥m nay ra',
        'ƒë√°nh m·ªói l√¥ ƒë·ªÅ',
        'ƒë√°nh l√¥ con',
        'ƒë√°nh ƒë·ªÅ con g√¨',
        'ƒë·ªÅ ƒë√°nh g√¨',
        'de danh gi',
        'song th·ªß l√¥',
        'SONG TH·ª¶ L√î',
    ];

    $arr30 = [
        'b√∫ 1 l√¥',
        'b√∫ ƒë·ªÅ ch·∫°m',
        'b√∫ 3 c√†ng l√¥',
        'b√∫ 3 nh√°y',
    ];

    $arr32 = [
        'bm telegram',
        'cai tieng viet',
        'c√†i ti·∫øng vi·ªát',
        'b·∫£o m·∫≠t telegram'
    ];

    $arr33 = [
        'cai 1.1.1',
        'c√†i 1.1.1',
        'c√†i vpn',
        'cai vpn'
    ];

    $arr34 = [
        'hd ch∆°i casino',
        'hd choi casino',
        'hd v√†o casino',
        'hd vao casino',
        's√≥c ƒëƒ©a ·ªü',
        'ch∆°i s·∫£nh n√†o',
        'xoc dia o',
    ];

    $arr35 = [
        'hd ch∆°i b√≥ng',
        'hd choi bong',
        'hd v√†o s√†n b√≥ng',
        'hd vao san bong',
        'choi san nao',
    ];

    $arr36 = [
        'xem kqxs',
        'kqxs',
        'nay s·ªë ra g√¨',
        'nay k·∫øt qu·∫£ ƒë·ªÅ g√¨',
        'xem ket qua xo so',
        'xem k·∫øt qu·∫£ xs',
        'xem ket qua xs',
        'xem kq xo so',
        'xem kq x·ªï s·ªë',
        'quay l√¥ ƒëi',
    ];

    $arr37 = [
        'cay th·∫≠t',
        'm√£i ƒë√©o',
        'ƒë·ª©t m·∫π',
        'ƒëi h·∫øt lun',
        'g√£y ng√°o ng∆°',
        'm·∫•t m·∫π',
    ];

    $arr38 = [
        'b√∫ qu√°',
        'l·ª•m ch·∫Øc',
        'b√∫ ƒëi',
        'ƒÉn th√¥ng',
        'b√∫ b√∫',
        'b√∫ ƒëc',
        'b√∫uu',
        'h√∫ppp',
        'b√∫ anh em',
        'anh em b√∫',
        'b√∫ nha ae',
        'b√∫ nh·ªìi r·ªìi ae',
        'b√∫ b√∫ ae',
    ];

    $arr39 = [
        't·ª± ƒë√°nh b·ªã',
        't·ª± ƒë√°nh to√†n thua',
        't·ª± ƒë√°nh to√†n o·∫≥ng',
        't·ª± ƒë√°nh thua',
        't·ª± ƒë√°nh kh√¥ng ',
        't·ª± ƒë√°nh n√™n thua ',
        'tu danh toan thua',
        'tu danh toan oang',
        'tu danh thua',
        'tu danh khong',
        'tu danh nen thua',
    ];

    $arr40 = [
        'cuoc tai xiu',
        'c∆∞·ª£c t√†i x·ªâu'
    ];

    foreach ($arr1 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> y√™u qu√° üòò',
                $reply = "",
                $mode = "HTML"
            );
            return false;
        }
    }

    foreach ($arr15 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'HD Ch∆°i xi√™n', 'callback_data' => 'bovhdcxx']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ƒëang mu·ªën t√¨m c√°ch c∆∞·ª£c xi√™n ? N·∫øu ƒë√∫ng vui l√≤ng click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ xem nh√©!',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr21 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'HD ch∆°i l√¥ ƒë·ªÅ', 'callback_data' => 'choilode']

                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ƒëang c·∫ßn c√°ch v√†o v√† ch∆°i L√¥ ƒë·ªÅ ? N·∫øu ƒë√∫ng vui l√≤ng click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ xem nh√©!',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr22 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'K·∫øt qu·∫£ XSMB', 'callback_data' => 'kqmb']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ƒëang mu·ªën xem K·∫øt qu·∫£ x·ªï s·ªë Mi·ªÅn B·∫Øc ? N·∫øu ƒë√∫ng vui l√≤ng click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ xem nh√©!',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr23 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'K·∫øt qu·∫£ XSMT', 'callback_data' => 'kqmt']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ƒëang mu·ªën xem K·∫øt qu·∫£ x·ªï s·ªë Mi·ªÅn Trung ? N·∫øu ƒë√∫ng vui l√≤ng click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ xem nh√©!',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr24 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'K·∫øt qu·∫£ XSMN', 'callback_data' => 'kqmn']

                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ƒëang mu·ªën xem K·∫øt qu·∫£ x·ªï s·ªë Mi·ªÅn Nam ? N·∫øu ƒë√∫ng vui l√≤ng click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ xem nh√©!',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr25 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'HD N·∫°p ti·ªÅn', 'callback_data' => 'hdnt']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> C√≥ v·∫ª nh∆∞ ƒëang c·∫ßn h∆∞·ªõng d·∫´n n·∫°p ti·ªÅn. N·∫øu ƒë√∫ng vui l√≤ng ch·ªçn h∆∞·ªõng d·∫´n N·∫°p ti·ªÅn b√™n d∆∞·ªõi ƒë·ªÉ ƒë∆∞·ª£c h∆∞·ªõng d·∫´n nh√©',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr26 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'HD R√∫t ti·ªÅn', 'callback_data' => 'hdrt']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> C√≥ v·∫ª nh∆∞ ch∆∞a bi·∫øt c√°ch r√∫t ti·ªÅn. N·∫øu ƒë√∫ng vui l√≤ng ch·ªçn h∆∞·ªõng d·∫´n R√∫t ti·ªÅn b√™n d∆∞·ªõi ƒë·ªÉ ƒë∆∞·ª£c h∆∞·ªõng d·∫´n nh√©',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr27 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'Nh·∫Øn tin H·ªó tr·ª£ Trang 24/24', 'url' => 'https://embed.168livechat.com/639c4bd3f02646f263e67599/']
                    ],
                    [
                        ['text' => 'Nh·∫Øn Th·ªßy Ti√™n üíã ', 'url' => 'https://t.me/thuytien06'],
                        ['text' => 'Nh·∫Øn Th·ªßy Ti√™n üì•', 'url' => 'https://t.me/thuytien006']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> C√≥ v·∫ª nh∆∞ ƒëang c·∫ßn h·ªó tr·ª£ v·∫•n ƒë·ªÅ n·∫°p r√∫t ti·ªÅn. Vui l√≤ng li√™n h·ªá tr·ª±c ti·∫øp h·ªó tr·ª£ vi√™n c·ªßa trang ho·∫∑c Th·ªßy ti√™n ngay b√™n d∆∞·ªõi ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ nhanh nh·∫•t nh√©.',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr28 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'HD X·ªï S·ªë', 'callback_data' => 'choilode']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> C√≥ v·∫ª nh∆∞ ch∆∞a bi·∫øt c√°ch r√∫t ti·ªÅn. N·∫øu ƒë√∫ng vui l√≤ng ch·ªçn h∆∞·ªõng d·∫´n R√∫t ti·ªÅn b√™n d∆∞·ªõi ƒë·ªÉ ƒë∆∞·ª£c h∆∞·ªõng d·∫´n nh√©',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr29 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'Xin ƒê·ªÅ üé∞', 'callback_data' => 'randomde'],
                        ['text' => 'Ba C√†ng üé∞', 'callback_data' => 'randomlo'],
                        ['text' => 'STL üé∞', 'callback_data' => 'randomstl']

                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = 'N·∫øu h√¥m nay v·∫´n ch∆∞a bi·∫øt ƒë√°nh con g√¨ th√¨ ƒë·ªÉ em g·ª£i √Ω cho nh√© ! ü§ë',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    $replies30 = array(
        "Ch√∫c m·ª´ng pro üéÜ. Qu√° uy t√≠n!",
        "ch√∫c m·ª´ng ·∫° ü•∞",
        "ƒë·ªÅ ƒë√≥m th√≠ch qu√° c∆°",
        "ch√∫c m·ª´ng l√¥ ƒë·ªÅ th·∫Øng ·∫°",
        "l√¥ ƒë·ªÅ may m·∫Øn th·∫ø nh·ªù",
        "r·ª±c r·ª° lun ü•∞",
        "√¢y x·∫ßy, ngon lun ·∫° üòò",
    );


    foreach ($arr30 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $reply = $replies37[array_rand($replies37)];
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ' . $reply,
                $reply = "",
                $mode = "HTML"
            );
            return false;
        }
    }

    foreach ($arr32 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'C√†i Ti·∫øng Vi·ªát ', 'url' => 'https://t.me/setlanguage/abcxyz'],
                        ['text' => 'B·∫£o m·∫≠t Telegram', 'callback_data' => 'bmtelegram']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> Vui l√≤ng ch·ªçn c√°c m·ª•c ph√π h·ª£p b√™n d∆∞·ªõi ƒë·ªÉ c√†i ƒë·∫∑t ƒë∆∞·ª£c Ti·∫øng Vi·ªát cho Telegram, c≈©ng nh∆∞ h∆∞·ªõng b·∫£o m·∫≠t Telegram ƒë·ªÉ tr√°nh b·ªã th√™m v√†o c√°c nh√≥m x·∫•u v√† l·ª´a ƒë·∫£o nh√©!',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr33 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'Android ', 'url' => 'https://play.google.com/store/apps/details?id=com.cloudflare.onedotonedotonedotone&hl=vi&gl=US'],
                        ['text' => 'Iphone', 'url' => 'https://apps.apple.com/vn/app/1-1-1-1-faster-internet/id1423538627?l=vi']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> N·∫øu H·ªôi vi√™n b·ªã ch·∫∑n kh√¥ng truy c·∫≠p ƒë∆∞·ª£c v√†o trang ch∆°i. H·ªôi vi√™n c√≥ th·ªÉ ƒë·ªïi VPN ƒë·ªÉ truy c·∫≠p trang ch∆°i b√¨nh th∆∞·ªùng. N·∫øu H·ªôi vi√™n ch∆∞a c√†i ƒë·∫∑t 1.1.1.1 vui l√≤ng ch·ªçn H·ªá ƒëi·ªÅu h√†nh ƒëang d√πng ph√π h·ª£p ƒë·ªÉ b·∫Øt ƒë·∫ßu t·∫£i App v·ªÅ m√°y!',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr34 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'HD s√†n WM', 'callback_data' => 'hdvswm'],
                        ['text' => 'HD s√†n DG', 'callback_data' => 'hdvsdg']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ƒëang c·∫ßn h∆∞·ªõng d·∫´n v√†o s√†n casino. N·∫øu ƒë√∫ng vui l√≤ng ch·ªçn s√†n c·∫ßn h·ªó tr·ª£ ƒë·ªÉ em h∆∞·ªõng d·∫´n nh√©!',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr35 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'HD s√†n BOV', 'callback_data' => 'hdcsbov'],
                        ['text' => 'HD s√†n MG188', 'callback_data' => 'hdcsmg']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ƒëang c·∫ßn h∆∞·ªõng d·∫´n v√†o s√†n b√≥ng. N·∫øu ƒë√∫ng vui l√≤ng ch·ªçn s√†n c·∫ßn h·ªó tr·ª£ ƒë·ªÉ em h∆∞·ªõng d·∫´n nh√©!',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    foreach ($arr36 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'Mi·ªÅn B·∫Øc', 'callback_data' => 'kqmb'],
                        ['text' => 'Mi·ªÅn Trung', 'callback_data' => 'kqmt'],
                        ['text' => 'Mi·ªÅn Nam', 'callback_data' => 'kqmn']
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ƒëang mu·ªën xem K·∫øt qu·∫£ x·ªï s·ªë 3 mi·ªÅn. N·∫øu ƒë√∫ng vui l√≤ng ch·ªçn mi·ªÅn mu·ªën xem.',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }

    $replies37 = array(
        "b√¨nh tƒ©nh l·∫°i n√®!",
        "ngh·ªâ ng∆°i t√≠ r·ªìi ch√∫t m√¨nh l√†m l·∫°i ü•∞",
        "thui kh√¥ng sao n√® üòì",
        "thui ngh·ªâ ch√∫t cho tinh th·∫ßn tho·∫£i m√°i ·∫°.",
        "ngh·ªâ ng∆°i t√≠ ƒëi ·∫°",
        "ks n√®, ƒëg d√†i m·ªõi bi·∫øt ng·ª±a hay",
        "haizz üòì",
        "ch∆∞a may th√¥i ·∫°, b√¨nh tƒ©nh ·∫°",
        "hic üòï",
        "h∆°i l·ªói t√≠ nh∆∞ng ko sao ·∫°",
        "b√¨h tƒ©nh n√® ƒë√¢u c√≤n c√≥ ƒë√≥ ·∫°!",
        "ü•∫",
        "üò¢",
    );

    foreach ($arr37 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $reply = $replies37[array_rand($replies37)];
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ' . $reply,
                $reply = "",
                $mode = "HTML"
            );
            return false;
        }
    }

    $replies38 = array(
        "Ch√∫c m·ª´ng ·∫° ü§™ !",
        "Tuy·ªát v·ªùi lun ·∫°",
        "Ch√∫c m·ª´ng c√≥ l·ªôc ·∫° ü§ë!",
        "Wow, tuy·ªát v·ªùi üòç !",
        "To·∫πt z·ªùi, may m·∫Øn qu√° ·∫° üòçüòö !",
        "iu lu√¥n üòö ",
        "üòç",
        "r·ª±c r·ª° ·∫°",
        "ch√∫c m·ª´ng ·∫°",
        "hay qu√° ü§©",
        "qu√†o, th·∫ø th√¨ chi·∫øn ti·∫øp n√†o",
        "tuy·ªát ·∫°",
        "ƒë·ªânh qu√° üòù",
        "qu√° l√† ok ·∫°",
        "ti·ªÅn ƒë√¢y ch·ª© ƒë√¢u ü•≥",
        "theo ti·∫øp n√†ooo",
        "oki lun",
        "ch√©n lu√¥n ch·ª© c√≤n g√¨ üî•",
        "vy ch√∫c m·ª´ng ·∫°",
        "ch√°y qu√° ƒë√™ üî•",
        "x·ª©t x·∫Øc lun",
        "üòÅ hay lun n√®",
        "l√™n l√† l√™n l√† l√™n nun",
        "l·∫°i xanh ro√†i hii üòö ",
    );

    foreach ($arr38 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $reply = $replies38[array_rand($replies38)];
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ' . $reply,
                $reply = "",
                $mode = "HTML"
            );
            return false;
        }
    }

    $replies39 = array(
        "t·ª± ƒë√°nh c≈©ng t·ªët nh∆∞ng theo chuy√™n gia th√¨ s·∫Ω ok h∆°n ·∫° !",
        "n√™n ch·ªçn nh·ªØng th·ªùi gian c√≥ chuy√™n gia cao th·ªß th√¨ m√¨nh theo s·∫Ω ok h∆°n ·∫°",
        "n·∫øu t·ª± ƒë√°nh th√¨ n√™n ƒë√°nh v·ª´a tay th√¥i ·∫°",
        "t·ª± ƒë√°nh th√¨ n√™n bi·∫øt c√°ch chia v·ªën cho h·ª£p l√Ω th√¨ s·∫Ω ok h∆°n ƒë√≥ ·∫°",
        "n√™n t√¨m hi·ªÉu kinh nghi·ªám t·ª´ c√°c chuy√™n gia trong nh√≥m, khi c√≥ kn r·ªìi m√¨nh t·ª± ƒë√°nh s·∫Ω ok h∆°n √≠",
        "trong nh√≥m c√≥ c√°c ad, chuy√™n gia, cao th·ªß ch∆°i n√™n n·∫øu ƒë∆∞·ª£c th√¨ m√¨nh n√™n theo s·∫Ω c√≥ l·ªùi h∆°n ·∫° üòö ",
    );

    foreach ($arr39 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $reply = $replies39[array_rand($replies39)];
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = '<a href="tg://user?id=' . $json["message"]["from"]["id"] . '">' . $json["message"]["from"]["first_name"] .
                    " " . $json["message"]["from"]["last_name"] . '</a> ' . $reply,
                $reply = "",
                $mode = "HTML"
            );
            return false;
        }
    }

    foreach ($arr40 as $keyword) {
        if (strpos($msg, strtolower($keyword)) !== false) {
            $keyboard = [
                'inline_keyboard' => [
                    [
                        ['text' => 'HD T√†i X·ªâu', 'callback_data' => 'bovhddktx'],
                    ]
                ]
            ];
            $reply_markup = json_encode($keyboard);
            $bot->sendMessage(
                $id = $json["message"]["chat"]["id"],
                $text = 'N·∫øu anh n√†o ch∆∞a bi·∫øt c∆∞·ª£c k√®o T√†i X·ªâu th√¨ click n√∫t h∆∞·ªõng d·∫´n b√™n d∆∞·ªõi ƒë·ªÉ em h∆∞·ªõng d·∫´n nhanh cho nh√©',
                $reply = "",
                $mode = "HTML",
                $reply_markup = $reply_markup
            );
            return false;
        }
    }
}
